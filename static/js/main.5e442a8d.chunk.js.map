{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PesonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","people","name","sex","born","died","fatherName","motherName","slug","personLink","useParams","getParentLink","parentName","parent","find","p","to","classNames","PeoplePage","useState","setPeople","errMess","setErrMess","useEffect","catch","map","length","NotFoundPage","getClassForLinkPages","isActive","App","role","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5e442a8d.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[]\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  const { personLink } = useParams();\n\n  const getParentLink = (parentName: string | null) => {\n    const parent = people.find(p => p.name === parentName);\n\n    if (parent) {\n      return (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={classNames(\n            { 'has-text-danger': parent.sex === 'f' },\n          )}\n        >\n          {parent.name}\n        </Link>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === personLink },\n      )}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames(\n            { 'has-text-danger': sex === 'f' },\n          )}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {getParentLink(motherName)}\n      </td>\n      <td>\n        {getParentLink(fatherName)}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PersonLink } from '../PesonLink/PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [errMess, setErrMess] = useState<boolean>(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setErrMess(true);\n      });\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {people === null && errMess === false && (<Loader />)}\n        {people !== null && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n                <PersonLink\n                  key={person.slug}\n                  people={people}\n                  person={person}\n                />\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        {errMess && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {people !== null && people.length < 1 && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Routes, Route, Navigate, NavLink,\n} from 'react-router-dom';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nconst getClassForLinkPages = ({ isActive } : { isActive: boolean }) => {\n  return classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getClassForLinkPages}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getClassForLinkPages}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\">\n            <Route index element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":personLink\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}